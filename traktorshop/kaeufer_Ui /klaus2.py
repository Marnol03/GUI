# -*- coding: utf-8 -*-
# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import random
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QSize
from PyQt5.QtGui import QPixmap, QPainter
from PyQt5.QtWidgets import QGraphicsScene, QLabel, QVBoxLayout, QHBoxLayout, QGraphicsView
import json
from json.decoder import JSONDecodeError
from PyQt5.QtCore import pyqtSignal
from collections import deque

#########################import json data #####################################
with open('data.json', 'r') as json_file:
    image_info_list = json.load(json_file)
with open('data1.json', 'r') as json_file:
    image_filenames = json.load(json_file)
with open('klausnetz.json', 'r') as json_file:
    klausnetz = json.load(json_file)

with open('image_names.json', 'r') as file:
    image_names = json.load(file)
with open('zu_img_info.json', 'r') as json_file:
    zu_img_info = json.load(json_file)
with open('user_data.json', 'r') as json_file:
    user_data = json.load(json_file)
with open('user_track.json', 'r') as json_file:
   user_track = json.load(json_file)
try:
    with open('result.json', 'r') as json_file:
        content = json_file.read()

        if not content.strip():
            war_img_info = []
        else:
            war_img_info = json.loads(content)
            with open('result.json', 'w') as json_file:
                json.dump([], json_file)
except FileNotFoundError:
    war_img_info = []
    print("Le fichier n'existe pas.")
except JSONDecodeError:
    print("Le fichier ne contient pas de JSON valide.")
####################################################################################
class Ui_Widget(object):
    def setupUi(self,Widget,man,user_data,user_track):
        with open('user_data.json', 'r') as json_file:
            user_data = json.load(json_file)

        Widget.setObjectName("Widget")
        Widget.resize(1100, 800)
        Widget.setMinimumSize(QtCore.QSize(1100, 800))
        self.centralwidget = QtWidgets.QWidget(Widget)

        ###########################user info laden###############################################
        self.nom = man
        self.data = user_data[self.nom]
        index = self.data["index"]
        if index == 2 :
            index = 0
            geld = self.data["budget"] + random.uniform(0.0, 50000.0)
            self.data["budget"] = geld
            self.data["index"]= index
            user_data[self.nom]= self.data
            with open('user_data.json', 'w') as json_file:
                json.dump(user_data, json_file, indent=2)
        #############################################################################
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(Widget)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.widget = QtWidgets.QWidget(Widget)
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.ListButton = QtWidgets.QWidget(self.widget)
        self.ListButton.setMinimumSize(QtCore.QSize(200, 640))
        self.ListButton.setMaximumSize(QtCore.QSize(200, 16777215))
        self.ListButton.setStyleSheet("QWidget{background-color: rgb(13, 86, 80);}\n"
                                      "QPushButton{background-color:white;}")
        self.ListButton.setObjectName("ListButton")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.ListButton)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.widget_3 = QtWidgets.QWidget(self.ListButton)
        self.widget_3.setStyleSheet("QLabel{\n"
                                    "    color:white;\n"
                                    "}")
        self.widget_3.setObjectName("widget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label = QtWidgets.QLabel(self.widget_3)
        self.label.setMinimumSize(QtCore.QSize(91, 71))
        self.label.setMaximumSize(QtCore.QSize(200, 131))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("images/account.png"))
        self.label.setScaledContents(True)
        self.label.setIndent(-1)
        self.label.setObjectName("label")
        self.verticalLayout_3.addWidget(self.label)
        self.label_2 = QtWidgets.QLabel(self.widget_3)
        self.label_2.setStyleSheet("font-size:26px;")
        self.label_2.setObjectName("label_2")
        self.verticalLayout_3.addWidget(self.label_2, 0, QtCore.Qt.AlignHCenter)
        self.widget_9 = QtWidgets.QWidget(self.widget_3)
        self.widget_9.setStyleSheet("QLabel{\n"
                                    "    font-size:24px;\n"
                                    "}")
        self.widget_9.setObjectName("widget_9")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget_9)
        self.horizontalLayout_2.setContentsMargins(20, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.widget_9)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_2.addWidget(self.label_3)
        self.label_6 = QtWidgets.QLabel(self.widget_9)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_2.addWidget(self.label_6)
        self.horizontalLayout_2.setStretch(0, 1)
        self.horizontalLayout_2.setStretch(1, 1)
        self.verticalLayout_3.addWidget(self.widget_9)
        self.verticalLayout_3.setStretch(0, 4)
        self.verticalLayout_3.setStretch(1, 1)
        self.verticalLayout_3.setStretch(2, 1)
        self.verticalLayout_2.addWidget(self.widget_3)
        self.widget_4 = QtWidgets.QWidget(self.ListButton)
        self.widget_4.setObjectName("widget_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_4)
        self.verticalLayout_4.setContentsMargins(12, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.pushButton_2 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_2.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout_4.addWidget(self.pushButton_2)
        self.pushButton = QtWidgets.QPushButton(self.widget_4)
        self.pushButton.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout_4.addWidget(self.pushButton)





        self.pushButton_3 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_3.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout_4.addWidget(self.pushButton_3)
        self.verticalLayout_2.addWidget(self.widget_4)
        self.widget_5 = QtWidgets.QWidget(self.ListButton)
        self.widget_5.setObjectName("widget_5")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.widget_5)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setSpacing(0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")

        self.pushButton_121 = QtWidgets.QPushButton(self.widget_5)
        self.pushButton_121.setMinimumSize(QtCore.QSize(90, 30))
        self.pushButton_121.setText("Log out")
        self.pushButton_121.setStyleSheet("font-size: 24px, color: white")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("images/logout.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_121.setIcon(icon1)
        self.pushButton_121.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_121.clicked.connect(self.log_out)

        self.verticalLayout_7.addWidget(self.pushButton_121, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_2.addWidget(self.widget_5)
        self.verticalLayout_2.setStretch(0, 4)
        self.verticalLayout_2.setStretch(1, 5)
        self.verticalLayout_2.setStretch(2, 2)
        self.horizontalLayout.addWidget(self.ListButton)
        self.stackedWidget = QtWidgets.QStackedWidget(self.widget)
        self.stackedWidget.setObjectName("stackedWidget")
        self.kauf = QtWidgets.QWidget()
        self.kauf.setObjectName("kauf")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.kauf)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.kauf)
        self.frame.setStyleSheet("QFrame{background-color: rgb(13, 86, 80);}\n"
                                 "\n"
                                 "            QPushButton {\n"
                                 "                background-color: white;\n"
                                 "                color: black;\n"
                                 "                border-radius: 10px;\n"
                                 "                border: 2px solid #2980b9;\n"
                                 "                font-size: 16px;\n"
                                 "            }\n"
                                 "            QPushButton:hover {\n"
                                 "                background-color: #2980b9;\n"
                                 "            }\n"
                                 "            QPushButton:pressed {\n"
                                 "                background-color: #21618c;\n"
                                 "                border: 2px solid #1b4f72;\n"
                                 "            }")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame)
        self.pushButton_4.setMinimumSize(QtCore.QSize(100, 40))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/left-arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_4.setIcon(icon)
        self.pushButton_4.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout_3.addWidget(self.pushButton_4)
        self.label_4 = QtWidgets.QLabel(self.frame)
        self.label_4.setStyleSheet("color: white;\n"
                                   "font-size: 28px;\n"
                                   "font-weight: bold;")
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_3.addWidget(self.label_4, 0, QtCore.Qt.AlignHCenter)
        self.pushButton_5 = QtWidgets.QPushButton(self.frame)
        self.pushButton_5.setMinimumSize(QtCore.QSize(100, 40))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("images/right-arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_5.setIcon(icon1)
        self.pushButton_5.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout_3.addWidget(self.pushButton_5)
        self.horizontalLayout_3.setStretch(0, 2)
        self.horizontalLayout_3.setStretch(1, 6)
        self.horizontalLayout_3.setStretch(2, 2)
        self.verticalLayout.addWidget(self.frame)
        self.widget_6 = QtWidgets.QWidget(self.kauf)
        self.widget_6.setObjectName("widget_6")
        self.widget_6.setStyleSheet("background-color: white;\n"
                                    "border: 1px solid black;"
                                    )

        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.widget_6)
        self.verticalLayout_13.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout_13.setSpacing(10)
        self.verticalLayout_13.setObjectName("verticalLayout_13")

        self.verticalLayout.addWidget(self.widget_6)
        self.verticalLayout.setStretch(0, 1)
        self.verticalLayout.setStretch(1, 9)
        self.stackedWidget.addWidget(self.kauf)
        self.kaufzu = QtWidgets.QWidget()
        self.kaufzu.setObjectName("kaufzu")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.kaufzu)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.frame_3 = QtWidgets.QFrame(self.kaufzu)
        self.frame_3.setStyleSheet("QFrame{background-color: rgb(13, 86, 80);}\n"
                                   "            QPushButton {\n"
                                   "                background-color: white;\n"
                                   "                color: black;\n"
                                   "                border-radius: 10px;\n"
                                   "                border: 2px solid #2980b9;\n"
                                   "                font-size: 16px;\n"
                                   "            }\n"
                                   "            QPushButton:hover {\n"
                                   "                background-color: #2980b9;\n"
                                   "            }\n"
                                   "            QPushButton:pressed {\n"
                                   "                background-color: #21618c;\n"
                                   "                border: 2px solid #1b4f72;\n"
                                   "            }")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.pushButton_7 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_7.setMinimumSize(QtCore.QSize(100, 40))
        self.pushButton_7.setIcon(icon)
        self.pushButton_7.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_7.setObjectName("pushButton_7")
        self.horizontalLayout_4.addWidget(self.pushButton_7)
        self.label_8 = QtWidgets.QLabel(self.frame_3)
        self.label_8.setStyleSheet("color: white;\n"
                                   "font-size: 28px;\n"
                                   "font-weight: bold;")
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_4.addWidget(self.label_8, 0, QtCore.Qt.AlignHCenter)
        self.pushButton_8 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_8.setMinimumSize(QtCore.QSize(100, 40))
        self.pushButton_8.setIcon(icon1)
        self.pushButton_8.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_8.setObjectName("pushButton_8")
        self.horizontalLayout_4.addWidget(self.pushButton_8)
        self.horizontalLayout_4.setStretch(0, 2)
        self.horizontalLayout_4.setStretch(1, 6)
        self.horizontalLayout_4.setStretch(2, 2)
        self.verticalLayout_9.addWidget(self.frame_3)
        self.widget_8 = QtWidgets.QWidget(self.kaufzu)
        self.widget_8.setObjectName("widget_8")
        self.widget_8.setStyleSheet("background-color:white;\n")
        #
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.widget_8)
        self.verticalLayout_12.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout_12.setSpacing(10)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        #
        self.verticalLayout_9.addWidget(self.widget_8)
        self.verticalLayout_9.setStretch(0, 1)
        self.verticalLayout_9.setStretch(1, 9)
        self.stackedWidget.addWidget(self.kaufzu)
        self.warenkorb = QtWidgets.QWidget()
        self.warenkorb.setObjectName("warenkorb")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.warenkorb)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.frame_2 = QtWidgets.QFrame(self.warenkorb)
        self.frame_2.setStyleSheet("background-color: rgb(13, 86, 80);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_7 = QtWidgets.QLabel(self.frame_2)
        self.label_7.setStyleSheet("color: white;\n"
                                   "font-size: 28px;\n"
                                   "font-weight: bold;")
        self.label_7.setObjectName("label_7")
        self.verticalLayout_8.addWidget(self.label_7, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_5.addWidget(self.frame_2)
        self.widget_7 = QtWidgets.QWidget(self.warenkorb)
        self.widget_7.setStyleSheet("            QPushButton {\n"
                                    "                background-color: #3498db;\n"
                                    "                color: #ffffff;\n"
                                    "                border-radius: 10px;\n"
                                    "                border: 2px solid #2980b9;\n"
                                    "                font-size: 16px;\n"
                                    "            }\n"
                                    "            QPushButton:hover {\n"
                                    "                background-color: #2980b9;\n"
                                    "            }\n"
                                    "            QPushButton:pressed {\n"
                                    "                background-color: #21618c;\n"
                                    "                border: 2px solid #1b4f72;\n"
                                    "            }")
        self.widget_7.setObjectName("widget_7")

        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.widget_7)
        self.verticalLayout_14.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout_14.setSpacing(10)
        self.verticalLayout_14.setObjectName("verticalLayout_14")

        self.pushButton_6 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_6.setGeometry(QtCore.QRect(550, 500, 161, 61))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("images/money-2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_6.setIcon(icon2)
        self.pushButton_6.setObjectName("pushButton_6")
        self.verticalLayout_5.addWidget(self.widget_7)
        self.verticalLayout_5.setStretch(0, 1)
        self.verticalLayout_5.setStretch(1, 9)
        self.stackedWidget.addWidget(self.warenkorb)
        self.horizontalLayout.addWidget(self.stackedWidget)
        self.verticalLayout_6.addWidget(self.widget)

        self.pushButton_9 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_9.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton_9.setObjectName("pushButton_9")
        self.verticalLayout_4.addWidget(self.pushButton_9)

        #######################vorhanden###################################
        self.vorhanden = QtWidgets.QWidget()
        self.vorhanden.setObjectName("vorhanden")

        self.verticalLayout_52 = QtWidgets.QVBoxLayout(self.vorhanden)
        self.verticalLayout_52.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_52.setSpacing(0)
        self.verticalLayout_52.setObjectName("verticalLayout_51")

        self.frame_22 = QtWidgets.QFrame(self.vorhanden)
        self.frame_22.setStyleSheet("background-color: rgb(13, 86, 80);")
        self.frame_22.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_22.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_22.setObjectName("frame_22")
        self.verticalLayout_82 = QtWidgets.QVBoxLayout(self.frame_22)
        self.verticalLayout_82.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_82.setSpacing(0)
        self.verticalLayout_82.setObjectName("verticalLayout_82")
        self.label_72 = QtWidgets.QLabel(self.frame_22)
        self.label_72.setStyleSheet("color: white;\n"
                                    "font-size: 28px;\n"
                                    "font-weight: bold;")
        self.label_72.setObjectName("label_72")
        self.verticalLayout_82.addWidget(self.label_72, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_52.addWidget(self.frame_22, 1)

        self.widget_72 = QtWidgets.QWidget(self.vorhanden)
        self.widget_72.setObjectName("widget_72")

        self.verticalLayout_142 = QtWidgets.QVBoxLayout(self.widget_72)
        self.verticalLayout_142.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout_142.setSpacing(10)
        self.verticalLayout_142.setObjectName("verticalLayout_142")
        self.verticalLayout_52.addWidget(self.widget_72, 9)

        self.stackedWidget.addWidget(self.vorhanden)
        ########################klausn##################################

        self.klausn = QtWidgets.QWidget()
        self.klausn.setObjectName("klausn")

        self.verticalLayout_51 = QtWidgets.QVBoxLayout(self.klausn)
        self.verticalLayout_51.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_51.setSpacing(0)
        self.verticalLayout_51.setObjectName("verticalLayout_51")

        self.frame_21 = QtWidgets.QFrame(self.klausn)
        self.frame_21.setStyleSheet("background-color: rgb(13, 86, 80);")
        self.frame_21.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_21.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_21.setObjectName("frame_21")
        self.verticalLayout_81 = QtWidgets.QVBoxLayout(self.frame_21)
        self.verticalLayout_81.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_81.setSpacing(0)
        self.verticalLayout_81.setObjectName("verticalLayout_81")
        self.label_71 = QtWidgets.QLabel(self.frame_21)
        self.label_71.setStyleSheet("color: white;\n"
                                   "font-size: 28px;\n"
                                   "font-weight: bold;")
        self.label_71.setObjectName("label_71")
        self.verticalLayout_81.addWidget(self.label_71, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_51.addWidget(self.frame_21,1)

        self.widget_71 = QtWidgets.QWidget(self.klausn)
        self.widget_71.setObjectName("widget_71")
        self.verticalLayout_141 = QtWidgets.QVBoxLayout(self.widget_71)
        self.verticalLayout_141.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_141.setSpacing(0)
        self.verticalLayout_141.setObjectName("verticalLayout_141")
        self.verticalLayout_51.addWidget(self.widget_71,9)
        label_o = QtWidgets.QLabel()
        label_o.setAlignment(QtCore.Qt.AlignCenter)
        label_o.setStyleSheet("font-size: 28px; font-weight: bold ; text-decoration: underline")
        label_o.setText("Klausnetz Mitglieder")
        self.verticalLayout_141.addWidget(label_o)
        self.netz_akt()

        self.stackedWidget.addWidget(self.klausn)
        ##########################################################
        self.pushButton_1 = QtWidgets.QPushButton()
        self.pushButton_1.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton_1.setObjectName("pushButton_1")
        self.verticalLayout_4.addWidget(self.pushButton_1)
        ###########################################################


        self.pushButton.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(0))
        self.pushButton_2.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1))
        self.pushButton_3.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(2))
        self.pushButton_9.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(3))
        self.pushButton_1.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(4))

        self.retranslateUi(Widget)
        self.stackedWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Widget)

        ######################### Filter ###############################

        self.criteriaWidget = QtWidgets.QWidget()
        self.criteriaWidget.setObjectName("criteriaWidget")

        self.verticalLayout1 = QtWidgets.QVBoxLayout(self.criteriaWidget)
        self.verticalLayout1.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout1.setSpacing(10)
        self.verticalLayout1.setObjectName("verticalLayout1")

        row_layout = QtWidgets.QHBoxLayout()
        row_layout.setObjectName("row_layout")
        self.verticalLayout1.addLayout(row_layout)
        frame = QtWidgets.QFrame()
        frame.setLayout(QtWidgets.QVBoxLayout())
        row_layout.addWidget(frame)
        self.horizontalLayout1 = QtWidgets.QHBoxLayout(self.criteriaWidget)
        self.horizontalLayout1.setObjectName("horizontalLayout1")
        self.filterLabel = QtWidgets.QLabel(self.criteriaWidget)
        self.filterLabel.setObjectName("filterLabel")
        self.filterLabel.setText("Hier filtern =>  ")
        self.filterLabel.setStyleSheet("QLabel { font-weight: bold; }")
        self.horizontalLayout1.addWidget(self.filterLabel)
        self.price_textEdit = QtWidgets.QTextEdit(self.criteriaWidget)
        self.priceLabel = QtWidgets.QLabel(self.criteriaWidget)
        self.priceLabel.setObjectName("priceLabel")
        self.priceLabel.setText("Price:")
        self.horizontalLayout1.addWidget(self.priceLabel)
        self.price_textEdit = QtWidgets.QTextEdit(self.criteriaWidget)
        self.price_textEdit.setMaximumSize(QtCore.QSize(200, 35))
        self.price_textEdit.setObjectName("price_textEdit")
        self.priceLabel.setStyleSheet("QLabel { font-weight: bold; }")
        self.price_textEdit.setStyleSheet("QTextEdit { border-radius: 10px; border: 2px solid #3498db; }")
        self.horizontalLayout1.addWidget(self.price_textEdit)
        self.psLabel = QtWidgets.QLabel(self.criteriaWidget)
        self.psLabel.setObjectName("psLabel")
        self.psLabel.setText("PS:")
        self.horizontalLayout1.addWidget(self.psLabel)
        self.ps_textEdit = QtWidgets.QTextEdit(self.criteriaWidget)
        self.ps_textEdit.setMaximumSize(QtCore.QSize(200, 35))
        self.ps_textEdit.setObjectName("ps_textEdit")
        self.psLabel.setStyleSheet("QLabel { font-weight: bold; }")
        self.ps_textEdit.setStyleSheet("QTextEdit { border-radius: 10px; border: 2px solid #3498db; }")
        self.horizontalLayout1.addWidget(self.ps_textEdit)
        self.kmLabel = QtWidgets.QLabel(self.criteriaWidget)
        self.kmLabel.setObjectName("kmLabel")
        self.kmLabel.setText("Km/h:")
        self.horizontalLayout1.addWidget(self.kmLabel)
        self.km_textEdit = QtWidgets.QTextEdit(self.criteriaWidget)
        self.km_textEdit.setMaximumSize(QtCore.QSize(200, 35))
        self.km_textEdit.setObjectName("km_textEdit")
        self.kmLabel.setStyleSheet("QLabel { font-weight: bold; }")
        self.km_textEdit.setStyleSheet("QTextEdit { border-radius: 10px; border: 2px solid #3498db; }")
        self.horizontalLayout1.addWidget(self.km_textEdit)
        self.baujahrLabel = QtWidgets.QLabel(self.criteriaWidget)
        self.baujahrLabel.setObjectName("baujahrLabel")
        self.baujahrLabel.setText("Baujahr:")
        self.horizontalLayout1.addWidget(self.baujahrLabel)
        self.baujahr_textEdit = QtWidgets.QTextEdit(self.criteriaWidget)
        self.baujahr_textEdit.setMaximumSize(QtCore.QSize(200, 35))
        self.baujahr_textEdit.setObjectName("baujahr_textEdit")
        self.baujahrLabel.setStyleSheet("QLabel { font-weight: bold; }")
        self.baujahr_textEdit.setStyleSheet("QTextEdit { border-radius: 10px; border: 2px solid #3498db; }")
        self.horizontalLayout1.addWidget(self.baujahr_textEdit)
        self.ok_pushButton = QtWidgets.QPushButton(self.criteriaWidget)
        self.ok_pushButton.setObjectName("ok_pushButton")
        self.ok_pushButton.setText("OK")
        self.horizontalLayout1.addWidget(self.ok_pushButton)
        self.ok_pushButton.clicked.connect(self.filter_tractors)

        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout1.addItem(spacerItem)
        self.verticalLayout_6.addLayout(self.horizontalLayout1)

        self.info_message_label = QtWidgets.QWidget()
        self.horizontalLayout2 = QtWidgets.QHBoxLayout(self.info_message_label)
        self.horizontalLayout2.setObjectName("horizontalLayout2")
        self.horizontalLayout1.addLayout(self.horizontalLayout2)
        self.info_message_label.setObjectName("info_message_label")
        self.info_message_label.setStyleSheet("font-weight: bold;")

        ###################################### Neue Traktoren ######################################

        self.car_info_list = []

        self.row_layout_1 = QtWidgets.QHBoxLayout()
        self.row_layout_1.setObjectName("row_layout_1")
        self.verticalLayout_12.addLayout(self.row_layout_1)

        self.row_layout_2 = QtWidgets.QHBoxLayout()
        self.row_layout_2.setObjectName("row_layout_2")
        self.verticalLayout_12.addLayout(self.row_layout_2)
        self.int = 0
        self.ind = 0
        for i in range(3):

            frame = QtWidgets.QFrame()
            frame.setStyleSheet("            QPushButton {\n"
                                    "                background-color: #3498db;\n"
                                    "                color: #ffffff;\n"
                                    "                border-radius: 10px;\n"
                                    "                border: 2px solid #2980b9;\n"
                                    "                font-size: 16px;\n"
                                    "            }\n"
                                "QFrame{border: 1px solid grey;}"
                                "QLabel{color: black;}")
            frame.setObjectName(f"frame_1_{i}")
            frame.setLayout(QtWidgets.QVBoxLayout())
            self.row_layout_1.addWidget(frame)

            frame1 = QtWidgets.QFrame()
            verticalLayout_frame1 = QtWidgets.QVBoxLayout(frame1)
            verticalLayout_frame1.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame1.setSpacing(0)
            verticalLayout_frame1.setObjectName("verticalLayout_frame1")
            frame.layout().addWidget(frame1)

            label_img = QtWidgets.QLabel(frame)
            label_img.setMinimumSize(QtCore.QSize(100, 100))
            label_img.setText("")
            label_img.setScaledContents(True)
            label_img.setObjectName(f"image_label_1_{i}")
            frame1.layout().addWidget(label_img)

            frame2 = QtWidgets.QFrame()
            frame2.setStyleSheet("border: none;")
            verticalLayout_frame2 = QtWidgets.QVBoxLayout(frame2)
            verticalLayout_frame2.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame2.setSpacing(0)
            verticalLayout_frame2.setObjectName("verticalLayout_frame2")
            frame.layout().addWidget(frame2)

            typ_label = QtWidgets.QLabel(frame)
            typ_label.setAlignment(QtCore.Qt.AlignCenter)
            typ_label.setStyleSheet("font-weight: bold;text-decoration: underline")
            typ_label.setObjectName(f"typ_label_1_{i}")
            verticalLayout_frame2.addWidget(typ_label)

            price_label = QtWidgets.QLabel(frame)
            price_label.setAlignment(QtCore.Qt.AlignLeft)
            price_label.setObjectName(f"price_label_1_{i}")
            verticalLayout_frame2.addWidget(price_label)

            hersteller_label = QtWidgets.QLabel(frame)
            hersteller_label.setAlignment(QtCore.Qt.AlignLeft)
            hersteller_label.setObjectName(f"hersteller_label_1_{i}")
            verticalLayout_frame2.addWidget(hersteller_label)

            ps_label = QtWidgets.QLabel(frame)
            ps_label.setAlignment(QtCore.Qt.AlignLeft)
            ps_label.setObjectName(f"ps_label_1_{i}")
            verticalLayout_frame2.addWidget(ps_label)

            km_label = QtWidgets.QLabel(frame)
            km_label.setAlignment(QtCore.Qt.AlignLeft)
            km_label.setObjectName(f"km_label_1_{i}")
            verticalLayout_frame2.addWidget(km_label)

            baujahr_label = QtWidgets.QLabel(frame)
            baujahr_label.setAlignment(QtCore.Qt.AlignLeft)
            baujahr_label.setObjectName(f"baujahr_label_1_{i}")
            verticalLayout_frame2.addWidget(baujahr_label)

            pushButton_12 = QtWidgets.QPushButton(frame)
            pushButton_12.setMinimumSize(QtCore.QSize(90, 30))
            pushButton_12.setText("add zu Warenkorb")
            pushButton_12.setStyleSheet("background-color: green")
            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap("images/shopping-cart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            pushButton_12.setIcon(icon1)
            pushButton_12.setIconSize(QtCore.QSize(20, 20))
            verticalLayout_frame2.addWidget(pushButton_12)
            verticalLayout_frame2.addSpacing(20)

            verticalLayout_frame5 = QtWidgets.QHBoxLayout(frame)
            verticalLayout_frame5.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame5.setSpacing(4)
            verticalLayout_frame5.setObjectName("verticalLayout_frame3")
            verticalLayout_frame2.addLayout(verticalLayout_frame5)

            pushButton_13 = QtWidgets.QPushButton(frame)
            pushButton_13.setMinimumSize(QtCore.QSize(90, 30))
            pushButton_13.setText("Zoom In")
            pushButton_13.setStyleSheet("background-color: green")
            verticalLayout_frame5.addWidget(pushButton_13)

            pushButton_14 = QtWidgets.QPushButton(frame)
            pushButton_14.setMinimumSize(QtCore.QSize(90, 30))
            pushButton_14.setText("Zoom Out")
            pushButton_14.setStyleSheet("background-color: green")
            verticalLayout_frame5.addWidget(pushButton_14)


            pushButton_12.clicked.connect(lambda _, inv=i: self.go_to_warenkorb(inv,True))
            pushButton_13.clicked.connect(lambda _,t=i, y=label_img: self.on_zoom_in(t, y))
            pushButton_13.clicked.connect(lambda _,t=i, y=label_img: self.on_zoom_out(t, y))


            # Ajout d'informations à la liste
            self.car_info_list.append({
                "price_label": price_label,
                "typ_label": typ_label,
                "image_label": label_img,
                "hersteller_label": hersteller_label,
                "ps_label": ps_label,
                "km_label": km_label,
                "baujahr_label": baujahr_label
            })
        inx = 3
        for i in range(3):
            inx += i
            if i == 2:
                inx -= 1
            frame = QtWidgets.QFrame()
            frame.setStyleSheet("            QPushButton {\n"
                                    "                background-color: green;\n"
                                    "                color: #ffffff;\n"
                                    "                border-radius: 10px;\n"
                                    "                border: 2px solid #2980b9;\n"
                                    "                font-size: 16px;\n"
                                    "            }\n"
                                "QFrame{border: 1px solid grey;}"
                                "QLabel{color: black;}")
            frame.setObjectName(f"frame_1_{i}")
            frame.setLayout(QtWidgets.QVBoxLayout())
            self.row_layout_2.addWidget(frame)

            frame3 = QtWidgets.QFrame()
            frame3.setStyleSheet("border-bottom: 1px solid grey")
            verticalLayout_frame3 = QtWidgets.QVBoxLayout(frame3)
            verticalLayout_frame3.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame3.setSpacing(0)
            verticalLayout_frame3.setObjectName("verticalLayout_frame1")
            frame.layout().addWidget(frame3)

            image_label = QtWidgets.QLabel(frame)
            image_label.setAlignment(QtCore.Qt.AlignLeft)
            image_label.setObjectName(f"image_label_2_{i}")
            image_label.setScaledContents(True)
            verticalLayout_frame3.addWidget(image_label)

            frame4 = QtWidgets.QFrame()
            frame4.setStyleSheet("border: none;")
            verticalLayout_frame4 = QtWidgets.QVBoxLayout(frame4)
            verticalLayout_frame4.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame4.setSpacing(0)
            verticalLayout_frame4.setObjectName("verticalLayout_frame2")
            frame.layout().addWidget(frame4)

            typ_label = QtWidgets.QLabel(frame)
            typ_label.setAlignment(QtCore.Qt.AlignCenter)
            typ_label.setStyleSheet("font-weight: bold;text-decoration: underline")
            typ_label.setObjectName(f"typ_label_2_{i}")
            verticalLayout_frame4.addWidget(typ_label)

            price_label = QtWidgets.QLabel(frame)
            price_label.setAlignment(QtCore.Qt.AlignLeft)
            price_label.setObjectName(f"price_label_2_{i}")
            verticalLayout_frame4.addWidget(price_label)

            hersteller_label = QtWidgets.QLabel(frame)
            hersteller_label.setAlignment(QtCore.Qt.AlignLeft)
            hersteller_label.setObjectName(f"hersteller_label_2_{i}")
            verticalLayout_frame4.addWidget(hersteller_label)

            ps_label = QtWidgets.QLabel(frame)
            ps_label.setAlignment(QtCore.Qt.AlignLeft)
            ps_label.setObjectName(f"ps_label_2_{i}")
            verticalLayout_frame4.addWidget(ps_label)

            km_label = QtWidgets.QLabel(frame)
            km_label.setAlignment(QtCore.Qt.AlignLeft)
            km_label.setObjectName(f"km_label_2_{i}")
            verticalLayout_frame4.addWidget(km_label)

            baujahr_label = QtWidgets.QLabel(frame)
            baujahr_label.setAlignment(QtCore.Qt.AlignLeft)
            baujahr_label.setObjectName(f"baujahr_label_2_{i}")
            verticalLayout_frame4.addWidget(baujahr_label)

            pushButton_12 = QtWidgets.QPushButton(frame)
            pushButton_12.setMinimumSize(QtCore.QSize(90, 30))
            pushButton_12.setText("add zu Warenkorb")
            pushButton_12.setStyleSheet("background-color: green")
            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap("images/shopping-cart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            pushButton_12.setIcon(icon1)
            pushButton_12.setIconSize(QtCore.QSize(20, 20))
            verticalLayout_frame4.addWidget(pushButton_12)
            verticalLayout_frame4.addSpacing(20)

            verticalLayout_frame6 = QtWidgets.QHBoxLayout(frame)
            verticalLayout_frame6.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame6.setSpacing(4)
            verticalLayout_frame6.setObjectName("verticalLayout_frame3")
            verticalLayout_frame4.addLayout(verticalLayout_frame6)

            pushButton_13 = QtWidgets.QPushButton(frame)
            pushButton_13.setMinimumSize(QtCore.QSize(90, 30))
            pushButton_13.setText("Zoom In")
            pushButton_13.setStyleSheet("background-color: green")
            verticalLayout_frame6.addWidget(pushButton_13)

            pushButton_14 = QtWidgets.QPushButton(frame)
            pushButton_14.setMinimumSize(QtCore.QSize(90, 30))
            pushButton_14.setText("Zoom Out")
            pushButton_14.setStyleSheet("background-color: green")
            verticalLayout_frame6.addWidget(pushButton_14)

            pushButton_12.clicked.connect(lambda _, inv=inx: self.go_to_warenkorb(inv,True))
            pushButton_13.clicked.connect(lambda _, t=inx, y=label_img: self.on_zoom_in(t, y))
            pushButton_13.clicked.connect(lambda _, t=inx, y=label_img: self.on_zoom_out(t, y))

            self.car_info_list.append({
                "price_label": price_label,
                "typ_label": typ_label,
                "image_label": image_label,
                "hersteller_label": hersteller_label,
                "ps_label": ps_label,
                "km_label": km_label,
                "baujahr_label": baujahr_label,
            })
        self.pushButton_8.clicked.connect(self.show_next_images)
        self.pushButton_4.clicked.connect(self.show_previous_imageszu)
        ################################Zubehör######################################################

        self.zu_info_list = []
        self.warenkorb_list = []
        self.new_index = 0

        row_layout_3 = QtWidgets.QHBoxLayout()
        row_layout_3.setObjectName("row_layout_3")
        self.verticalLayout_13.addLayout(row_layout_3)

        row_layout_4 = QtWidgets.QHBoxLayout()
        row_layout_4.setObjectName("row_layout_4")
        self.verticalLayout_13.addLayout(row_layout_4)


        for i in range(3):
            frame = QtWidgets.QFrame()
            frame.setStyleSheet("            QPushButton {\n"
                                    "                background-color: green;\n"
                                    "                color: #ffffff;\n"
                                    "                border-radius: 10px;\n"
                                    "                border: 2px solid #2980b9;\n"
                                    "                font-size: 16px;\n"
                                    "            }\n"
                                "QFrame{border: 1px solid grey;}"
                                "QLabel{color: black;}")
            frame.setObjectName(f"frame_1_{i}")
            verticalLayout_frame = QtWidgets.QVBoxLayout(frame)
            verticalLayout_frame.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame.setSpacing(0)
            self.horizontalLayout.setStretch(0, 3)
            verticalLayout_frame.setObjectName("verticalLayout_2")
            row_layout_3.addWidget(frame)

            frame1 = QtWidgets.QFrame()
            frame1.setStyleSheet("border-bottom: 1px solid grey")
            verticalLayout_frame1 = QtWidgets.QVBoxLayout(frame1)
            verticalLayout_frame1.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame1.setSpacing(0)
            verticalLayout_frame1.setObjectName("verticalLayout_frame1")
            frame.layout().addWidget(frame1,3)

            label_img = QtWidgets.QLabel(frame)
            label_img.setMinimumSize(QtCore.QSize(100, 100))
            label_img.setText("")
            label_img.setScaledContents(True)
            label_img.setObjectName(f"image_label_1_{i}")
            frame1.layout().addWidget(label_img)

            frame2 = QtWidgets.QFrame()
            frame2.setStyleSheet("border: none;")
            verticalLayout_frame2 = QtWidgets.QVBoxLayout(frame2)
            verticalLayout_frame2.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame2.setSpacing(0)
            verticalLayout_frame2.setObjectName("verticalLayout_frame2")
            frame.layout().addWidget(frame2,2)

            typ_label = QtWidgets.QLabel(frame)
            typ_label.setAlignment(QtCore.Qt.AlignCenter)
            typ_label.setStyleSheet("font-weight: bold;text-decoration: underline")
            typ_label.setObjectName(f"typ_label_1_{i}")
            frame2.layout().addWidget(typ_label)

            kompat_label = QtWidgets.QLabel(frame)
            kompat_label.setAlignment(QtCore.Qt.AlignLeft)
            kompat_label.setObjectName(f"kompat_label_1_{i}")
            frame2.layout().addWidget(kompat_label)

            price_label = QtWidgets.QLabel(frame)
            price_label.setAlignment(QtCore.Qt.AlignLeft)
            price_label.setObjectName(f"price_label_1_{i}")
            frame2.layout().addWidget(price_label)

            pushButton_12 = QtWidgets.QPushButton(frame)
            pushButton_12.setMinimumSize(QtCore.QSize(90, 30))
            pushButton_12.setText("add zu Warenkorb")
            pushButton_12.setStyleSheet("background-color: green")
            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap("images/shopping-cart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            pushButton_12.setIcon(icon1)
            pushButton_12.setIconSize(QtCore.QSize(20, 20))
            verticalLayout_frame2.addWidget(pushButton_12)
            pushButton_12.clicked.connect(lambda _, inv=i: self.go_to_warenkorb(inv,False))

            # Ajout d'informations à la liste
            self.zu_info_list.append({
                "price_label": price_label,
                "kompat_label": kompat_label,
                "image_label": label_img,
                "typ_label": typ_label,
            })
        inx = 3
        for i in range(3):
            inx += i
            if i == 2:
                inx -= 1
            frame = QtWidgets.QFrame()
            frame.setStyleSheet("            QPushButton {\n"
                                    "                background-color: green;\n"
                                    "                color: #ffffff;\n"
                                    "                border-radius: 10px;\n"
                                    "                border: 2px solid #2980b9;\n"
                                    "                font-size: 16px;\n"
                                    "            }\n"
                                "QFrame{border: 1px solid grey;}"
                                "QLabel{color: black;}")
            frame.setObjectName(f"frame_1_{i}")
            verticalLayout_frame = QtWidgets.QVBoxLayout(frame)
            verticalLayout_frame.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame.setSpacing(0)
            self.horizontalLayout.setStretch(0, 3)
            verticalLayout_frame.setObjectName("verticalLayout_3")
            row_layout_4.addWidget(frame)

            frame3 = QtWidgets.QFrame()
            frame3.setStyleSheet("border-bottom: 1px solid grey")
            verticalLayout_frame3 = QtWidgets.QVBoxLayout(frame3)
            verticalLayout_frame3.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame3.setSpacing(0)
            verticalLayout_frame3.setObjectName("verticalLayout_frame1")
            frame.layout().addWidget(frame3,3)

            label_img = QtWidgets.QLabel(frame)
            label_img.setMinimumSize(QtCore.QSize(100, 100))
            label_img.setText("")
            label_img.setScaledContents(True)
            label_img.setObjectName(f"image_label_1_{i}")
            frame3.layout().addWidget(label_img)

            frame4 = QtWidgets.QFrame()
            frame4.setStyleSheet("border: none;")
            verticalLayout_frame4 = QtWidgets.QVBoxLayout(frame4)
            verticalLayout_frame4.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame4.setSpacing(0)
            verticalLayout_frame4.setObjectName("verticalLayout_frame2")
            frame.layout().addWidget(frame4,2)

            typ_label = QtWidgets.QLabel(frame)
            typ_label.setAlignment(QtCore.Qt.AlignCenter)
            typ_label.setStyleSheet("font-weight: bold;text-decoration: underline")
            typ_label.setObjectName(f"typ_label_2_{i}")
            frame4.layout().addWidget(typ_label)

            kompat_label = QtWidgets.QLabel(frame)
            kompat_label.setAlignment(QtCore.Qt.AlignLeft)
            kompat_label.setObjectName(f"kompat_label_2_{i}")
            frame4.layout().addWidget(kompat_label)

            price_label = QtWidgets.QLabel(frame)
            price_label.setAlignment(QtCore.Qt.AlignLeft)
            price_label.setObjectName(f"price_label_2_{i}")
            frame4.layout().addWidget(price_label)

            pushButton_12 = QtWidgets.QPushButton(frame)
            pushButton_12.setMinimumSize(QtCore.QSize(90, 30))
            pushButton_12.setText("add zu Warenkorb")
            pushButton_12.setStyleSheet("background-color: green")
            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap("images/shopping-cart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            pushButton_12.setIcon(icon1)
            pushButton_12.setIconSize(QtCore.QSize(20, 20))
            verticalLayout_frame4.addWidget(pushButton_12)
            pushButton_12.clicked.connect(lambda _, inv=inx: self.go_to_warenkorb(inv,False))

            self.zu_info_list.append({
                "price_label": price_label,
                "kompat_label": kompat_label,
                "image_label": label_img,
                "typ_label": typ_label,
            })

            ###########################Warenkorb####################################

        frame51 = QtWidgets.QFrame()
        frame51.setStyleSheet("border-bottom: 1px solid black, background-color: red")
        verticalLayout_frame51 = QtWidgets.QVBoxLayout(frame51)
        verticalLayout_frame51.setContentsMargins(0, 0, 0, 0)
        verticalLayout_frame51.setSpacing(0)
        verticalLayout_frame51.setObjectName("verticalLayout_frame1")
        # self.verticalLayout_14.addLayout(frame51,4)
        self.verticalLayout_14.addWidget(frame51, 6)

        frame61 = QtWidgets.QFrame()
        verticalLayout_frame61 = QtWidgets.QVBoxLayout(frame61)
        verticalLayout_frame61.setContentsMargins(0, 0, 0, 0)
        verticalLayout_frame61.setSpacing(0)
        verticalLayout_frame61.setObjectName("verticalLayout_frame1")
        self.verticalLayout_14.addWidget(frame61, 1)

        self.framewar = QtWidgets.QFrame()
        self.framewar.setStyleSheet("QFrame{border: 1px solid grey;}"
                                    "QLabel{color: black;}")
        self.framewar.setObjectName(f"frame_1_{i}")
        self.verticalLayout_framewar = QtWidgets.QVBoxLayout(self.framewar)
        self.verticalLayout_framewar.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_framewar.setSpacing(0)
        self.verticalLayout_framewar.setObjectName("verticalLayout_framwar")
        verticalLayout_frame51.addWidget(self.framewar)
        self.msg = QtWidgets.QLabel(self.framewar)
        self.msg.setAlignment(QtCore.Qt.AlignCenter)
        self.msg.setStyleSheet("font-weight: bold; border: none; font-size: 25px")
        self.msg.setText("Warenkorb leer...")
        self.verticalLayout_framewar.addWidget(self.msg)
        frame = QtWidgets.QFrame()
        frame.setStyleSheet("QFrame{border: 1px solid grey;}"
                            "QLabel{color: black;}")
        frame.setObjectName(f"frame_1_{i}")
        verticalLayout_frame = QHBoxLayout(frame)
        verticalLayout_frame.setContentsMargins(0, 0, 0, 0)
        verticalLayout_frame.setSpacing(0)
        self.horizontalLayout.setStretch(0, 3)
        verticalLayout_frame.setObjectName("verticalLayout_3")
        verticalLayout_frame61.addWidget(frame)

        gesampt = QtWidgets.QLabel(frame)
        gesampt.setAlignment(QtCore.Qt.AlignCenter)
        gesampt.setStyleSheet("font-weight: bold;text-decoration: underline; border: none; font-size: 25px")
        gesampt.setText("Gesamte Preis: ")
        verticalLayout_frame.addWidget(gesampt, 2)
        self.gesamptp = QtWidgets.QLabel(frame)
        self.gesamptp.setAlignment(QtCore.Qt.AlignVCenter)
        self.gesamptp.setStyleSheet("font-weight: bold;font-size: 28px; border: none")
        self.gesamptp.setText("0 €")
        verticalLayout_frame.addWidget(self.gesamptp, 2)
        verticalLayout_frame.addWidget(self.pushButton_6, 1)


        self.current_image_index = 0
        self.war_index = 0
        self.track_list = []

        self.show_images(self.current_image_index)
        self.show_imageszu(self.new_index)
        self.show_trakt(user_track)
        self.pushButton_7.clicked.connect(self.show_previous_images)
        self.pushButton_5.clicked.connect(self.show_next_imageszu)
        self.summe_war=0


    #################################### Filter Page #######################################
        row_layout_7 = QtWidgets.QHBoxLayout()
        row_layout_7.setObjectName("row_layout_7")
        self.verticalLayout_12.addLayout(row_layout_7)

    ###################################### Zoom Funktion######################################

        self.zoom_factors = [1.0, 1.0, 1.0]
        self.zoom_step = 0.2

    def on_zoom_in(self, image, label):
        self.zoom_factors[image] *= (1.0 + self.zoom_step)
        self.resize_image(image, label)

    def on_zoom_out(self, image, label):
        # Ajustez le pas de zoom arrière pour un effet plus doux (par exemple, 0.8)
        self.zoom_factors[image] *= (1.0 - 0.2 * self.zoom_step)
        self.resize_image(image, label)

    def resize_image(self, image, label):
        pixmap = QPixmap(image_filenames[image])
        size = pixmap.size()
        scaled_pixmap = pixmap.scaled(self.zoom_factors[image] * size)
        label.setPixmap(scaled_pixmap)


    ###################################### Neue Traktoren Funktion######################################

    def show_images(self, start_index):
        for i in range(6):
            car_info = self.car_info_list[i]
            car_info["image_label"].clear()

        for i in range(6):
            index = start_index + i

            if index <= len(image_info_list):
                image_info = image_info_list[index]

            if index <= len(image_filenames):
                pixmap = QtGui.QPixmap(image_filenames[index])
                pixmap = pixmap.scaledToWidth(300)

                car_info = self.car_info_list[i]
                car_info["image_label"].setPixmap(pixmap)

                image_info = image_info_list[index]

                car_info["typ_label"].setText(image_info["typ"])
                car_info["price_label"].setText(image_info["price"])
                car_info["hersteller_label"].setText(image_info["hersteller"])
                car_info["ps_label"].setText(image_info["ps"])
                car_info["km_label"].setText(image_info["km"])
                car_info["baujahr_label"].setText(image_info["baujahr"])

    def show_previous_images(self):

        if self.current_image_index > 0:
            self.current_image_index -= 6
            self.ind -= 6
            self.show_images(self.current_image_index)

    def show_next_images(self):
        if self.current_image_index + 6 < len(image_filenames):
            print("Current index before:", self.current_image_index)
            self.current_image_index += 6
            self.ind += 6
            print("Current index after:", self.current_image_index)
            self.show_images(self.current_image_index)

    ################################Zubehör fonktion ######################################################

    def show_imageszu(self, start_indexzu):

        for i in range(6):
            zu_info = self.zu_info_list[i]
            zu_info["image_label"].clear()

        for i in range(6):
            print(f"the start_indexzu ist ${start_indexzu}")
            index = start_indexzu + i
            print(f"the index ist ${index}")

            if index <= len(zu_img_info):
                image_info = zu_img_info[index]

                if index <= len(image_names):
                    pixmap = QtGui.QPixmap(image_names[index])
                    pixmap = pixmap.scaledToWidth(300)

                    zu_info = self.zu_info_list[i]
                    zu_info["image_label"].setPixmap(pixmap)

                    # image_info = zu_img_info[index]

                    zu_info["typ_label"].setText(image_info["typ"])
                    zu_info["price_label"].setText(image_info["price"])
                    zu_info["kompat_label"].setText(image_info["kompat"])

    def show_previous_imageszu(self):

        if self.new_index > 0:
            self.new_index -= 6
            self.int -= 6
            self.show_imageszu(self.new_index)

    def show_next_imageszu(self):
        if self.new_index + 6 < len(image_names):
            print("New index before:", self.new_index)
            self.new_index += 6
            self.int += 6

            print("New index after:", self.new_index)
            self.show_imageszu(self.new_index)

    ##############go ot Warenkorb####################
    def go_to_warenkorb(self, inv, test):
        help = inv + self.ind

        try:
            with open('result.json', 'r') as json_file:
                content = json_file.read()

                if not content.strip():
                    result_list = []
                else:
                    result_list = json.loads(content)
        except FileNotFoundError:
            result_list = []

        if len(result_list) < 3:
            if test == True:
                help = inv + self.ind
                info = image_info_list[help]
                if info["menge"] == 0:
                    self.show_menge_warning()
                    return 1
                else:
                    result_list.append({
                        "image": image_filenames[help],
                        "price": info["price"],
                        "name": info["typ"],
                        "hersteller": info["hersteller"],
                        "index":help,
                        "bool": "true"
                    })
            if test == False:
                help = inv + self.int
                info = zu_img_info[help]
                result_list.append({
                    "image": image_names[help],
                    "price": info["price"],
                    "name": info["typ"],
                    "index": help,
                    "bool": "false"
                })

        with open('result.json', 'w') as json_file:
            json.dump(result_list, json_file)
        if len(result_list) == 1:
            for i in range(self.framewar.layout().count()):
                widget = self.framewar.layout().itemAt(i).widget()
                if widget is not None:
                    widget.deleteLater()

            self.frameh = QtWidgets.QFrame()
            self.frameh.setObjectName(f"frame_1_1")
            horizontalLayout_frame = QtWidgets.QHBoxLayout()
            self.frameh.setLayout(horizontalLayout_frame)
            self.frameh.setMaximumHeight(250)
            horizontalLayout_frame.setContentsMargins(2, 2, 2, 2)
            horizontalLayout_frame.setSpacing(10)
            horizontalLayout_frame.setObjectName("verticalLayout_3")
            self.verticalLayout_framewar.addWidget(self.frameh, 1)

            frame1 = QtWidgets.QFrame()
            verticalLayout_frame1 = QtWidgets.QVBoxLayout(frame1)
            verticalLayout_frame1.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame1.setSpacing(0)
            verticalLayout_frame1.setObjectName("verticalLayout_frame1")
            self.frameh.layout().addWidget(frame1)

            label_img = QtWidgets.QLabel(self.frameh)
            label_img.setMinimumSize(QtCore.QSize(100, 100))
            label_img.setText("")
            label_img.setScaledContents(True)
            label_img.setObjectName(f"image_label_1_1")
            frame1.layout().addWidget(label_img)

            frame2 = QtWidgets.QFrame()
            frame2.setStyleSheet("border: none;")
            verticalLayout_frame2 = QtWidgets.QVBoxLayout(frame2)
            verticalLayout_frame2.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame2.setSpacing(0)
            verticalLayout_frame2.setObjectName("verticalLayout_frame2")
            self.frameh.layout().addWidget(frame2)

            typ_label = QtWidgets.QLabel(self.frameh)
            typ_label.setAlignment(QtCore.Qt.AlignCenter)
            typ_label.setStyleSheet("font-weight: bold;text-decoration: underline")
            typ_label.setObjectName(f"typ_label_1_1")
            verticalLayout_frame2.addWidget(typ_label)

            price_label = QtWidgets.QLabel(self.frameh)
            price_label.setAlignment(QtCore.Qt.AlignLeft)
            price_label.setObjectName(f"price_label_1_1")
            verticalLayout_frame2.addWidget(price_label)

            # Ajout d'informations à la liste
            self.warenkorb_list.append({
                "price_label": price_label,
                "typ_label": typ_label,
                "image_label": label_img,
            })
        if len(result_list) == 2:
            frame = QtWidgets.QFrame()
            frame.setObjectName(f"frame_1_2")
            horizontalLayout_frame = QtWidgets.QHBoxLayout()
            frame.setLayout(horizontalLayout_frame)
            horizontalLayout_frame.setContentsMargins(2, 2, 2, 2)
            horizontalLayout_frame.setSpacing(10)
            horizontalLayout_frame.setObjectName("verticalLayout_3")
            self.verticalLayout_framewar.addWidget(frame, 1)

            frame1 = QtWidgets.QFrame()
            verticalLayout_frame1 = QtWidgets.QVBoxLayout(frame1)
            verticalLayout_frame1.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame1.setSpacing(0)
            verticalLayout_frame1.setObjectName("verticalLayout_frame1")
            frame.layout().addWidget(frame1)

            label_img = QtWidgets.QLabel(frame)
            label_img.setMinimumSize(QtCore.QSize(100, 100))
            label_img.setText("")
            label_img.setScaledContents(True)
            label_img.setObjectName(f"image_label_1_2")
            frame1.layout().addWidget(label_img)

            frame2 = QtWidgets.QFrame()
            frame2.setStyleSheet("border: none;")
            verticalLayout_frame2 = QtWidgets.QVBoxLayout(frame2)
            verticalLayout_frame2.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame2.setSpacing(0)
            verticalLayout_frame2.setObjectName("verticalLayout_frame2")
            frame.layout().addWidget(frame2)

            typ_label = QtWidgets.QLabel(frame)
            typ_label.setAlignment(QtCore.Qt.AlignCenter)
            typ_label.setStyleSheet("font-weight: bold;text-decoration: underline")
            typ_label.setObjectName(f"typ_label_1_2")
            verticalLayout_frame2.addWidget(typ_label)

            price_label = QtWidgets.QLabel(frame)
            price_label.setAlignment(QtCore.Qt.AlignLeft)
            price_label.setObjectName(f"price_label_1_2")
            verticalLayout_frame2.addWidget(price_label)

            # Elemente in der liste hinzufügen
            self.warenkorb_list.append({
                "price_label": price_label,
                "typ_label": typ_label,
                "image_label": label_img,
            })
        if len(result_list) == 3:
            frame = QtWidgets.QFrame()
            frame.setObjectName(f"frame_1_3")
            horizontalLayout_frame = QtWidgets.QHBoxLayout()
            frame.setLayout(horizontalLayout_frame)
            horizontalLayout_frame.setContentsMargins(2, 2, 2, 2)
            horizontalLayout_frame.setSpacing(10)
            horizontalLayout_frame.setObjectName("verticalLayout_3")
            self.verticalLayout_framewar.addWidget(frame, 1)

            frame1 = QtWidgets.QFrame()
            verticalLayout_frame1 = QtWidgets.QVBoxLayout(frame1)
            verticalLayout_frame1.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame1.setSpacing(0)
            verticalLayout_frame1.setObjectName("verticalLayout_frame1")
            frame.layout().addWidget(frame1)

            label_img = QtWidgets.QLabel(frame)
            label_img.setMinimumSize(QtCore.QSize(100, 100))
            label_img.setText("")
            label_img.setScaledContents(True)
            label_img.setObjectName(f"image_label_1_3")
            frame1.layout().addWidget(label_img)

            frame2 = QtWidgets.QFrame()
            frame2.setStyleSheet("border: none;")
            verticalLayout_frame2 = QtWidgets.QVBoxLayout(frame2)
            verticalLayout_frame2.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame2.setSpacing(0)
            verticalLayout_frame2.setObjectName("verticalLayout_frame2")
            frame.layout().addWidget(frame2)

            typ_label = QtWidgets.QLabel(frame)
            typ_label.setAlignment(QtCore.Qt.AlignCenter)
            typ_label.setStyleSheet("font-weight: bold;text-decoration: underline")
            typ_label.setObjectName(f"typ_label_1_3")
            verticalLayout_frame2.addWidget(typ_label)

            price_label = QtWidgets.QLabel(frame)
            price_label.setAlignment(QtCore.Qt.AlignLeft)
            price_label.setObjectName(f"price_label_1_3")
            verticalLayout_frame2.addWidget(price_label)

            self.warenkorb_list.append({
                "price_label": price_label,
                "typ_label": typ_label,
                "image_label": label_img,
            })
        for i in range(3):
            if i == 3:
                break
            index = self.war_index + i
            if index < len(self.warenkorb_list):
                war_info = self.warenkorb_list[index]

            if index < len(result_list):
                war_img = result_list[index]
                pixmap = QtGui.QPixmap(war_img["image"])
                pixmap = pixmap.scaledToWidth(300)

                prix_string = war_img["price"]

                if test == True:
                    prix_nombre = float(prix_string.replace('\u20ac', '').replace(',', '.'))
                else:
                    prix_nombre = float(prix_string.replace('\u20ac', '').replace(',', '.').replace('price:',' '))
                self.summe_war += prix_nombre
                self.gesamptp.setText(f"{self.summe_war} €")

                war_info["image_label"].setPixmap(pixmap)
                war_info["typ_label"].setText(war_img["name"])
                war_info["price_label"].setText("Preis : " + war_img["price"])
        self.pushButton_6.clicked.connect(lambda _, sat = result_list: self.bezahlen(result_list))
        self.pushButton_6.clicked.connect(lambda: result_list.clear())

###############bezahlungsFunktion####################
    def bezahlen(self,result):
        budget = self.data["budget"]
        if budget < self.summe_war:
            print("budget insuffisant")
            self.show_budget_warning()
        else:
            budget = budget - self.summe_war

            self.data["budget"] = budget
            user_data[self.nom] = self.data
            with open('user_data.json', 'w') as json_file:
                json.dump(user_data, json_file, indent=2)
            self.label_3.setText(str(self.data["budget"]))
            self.gesamptp.setText("0 €")

            track = user_track.get(self.nom, [])

            for i in range(len(result)):
                info = result[i]

                img = info["image"]
                track.append({
                    "image": img,
                    "typ": info["name"],
                    "index": 0,
                    "num": info["index"],
                    "price": info["price"]
                })

            user_track[self.nom] = track
            for i in range(len(result)):
                element = result[i]
                verd = element["bool"]
                index = element["index"]
                if verd == "true" :
                    print("je suis a true")
                    element2 = image_info_list[index]
                    menge = element2["menge"]
                    menge = menge - 1
                    element2["menge"]=menge
                    image_info_list[index] = element2
                    with open('data.json', 'w') as json_file:
                        json.dump(image_info_list, json_file, indent=2)
                elif verd == "false" :
                    print("je suis a false")
                    element2 = zu_img_info[index]
                    menge = element2["menge"]
                    menge = menge - 1
                    element2["menge"]=menge
                    image_info_list[index] = element2
                    with open('data.json', 'w') as json_file:
                        json.dump(zu_img_info, json_file, indent=2)
            # Entferne QLabel-Objekte aus dem Dictionary
            user_track_serializable = {
                key: value.text() if isinstance(value, QLabel) else value
                for key, value in user_track.items()
            }

            with open('user_track.json', 'w') as json_file:
                json.dump(user_track_serializable, json_file, indent=2)
            result_list = []
            with open('result.json', 'w') as json_file:
                json.dump(result_list, json_file)
            print("bazahlt!!!")
            for i in range(self.framewar.layout().count()):
                widget = self.framewar.layout().itemAt(i).widget()
                if widget is not None:
                    widget.deleteLater()
            for i in range(self.frame2.layout().count()):
                widget = self.frame2.layout().itemAt(i).widget()
                if widget is not None:
                    widget.deleteLater()
            self.Akt_vorhan(user_track)
        #######################traktoren_vorhanden_Page ###############################
    def show_trakt(self,user_track):
        ndata = user_track[self.nom]

        ###################################################
        self.frame2 = QtWidgets.QFrame()
        self.frame2.setObjectName(f"frame_1_2")
        self.frame2.setStyleSheet("background-color: none")
        self.horizontalLayout_frame2 = QtWidgets.QHBoxLayout()
        self.frame2.setLayout( self.horizontalLayout_frame2)
        self.horizontalLayout_frame2.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_frame2.setSpacing(10)
        self.horizontalLayout_frame2.setObjectName("verticalLayout_3")

        self.frame1 = QtWidgets.QFrame()
        self.frame1.setObjectName(f"frame_1_2")
        self.frame1.setStyleSheet("background-color: none")
        self.horizontalLayout_frame1 = QtWidgets.QHBoxLayout()
        self.frame1.setLayout( self.horizontalLayout_frame1)
        self.horizontalLayout_frame1.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_frame1.setSpacing(10)
        self.horizontalLayout_frame1.setObjectName("verticalLayout_3")
        self.verticalLayout_142.addWidget(self.frame2, 1)
        self.verticalLayout_142.addWidget(self.frame1, 1)
        #####################################################
        self.Akt_vorhan(user_track)

    def Akt_vorhan(self,user_track):
        ndata = user_track[self.nom]
        print(ndata)
        for i in range(len(ndata)):
            frame = QtWidgets.QFrame()
            frame.setObjectName(f"frame_1_2")
            frame.setStyleSheet("border: 1px solid grey")
            frame.setMaximumSize(300, 400)
            horizontalLayout_frame = QtWidgets.QVBoxLayout()
            frame.setLayout(horizontalLayout_frame)
            horizontalLayout_frame.setContentsMargins(2, 2, 2, 2)
            horizontalLayout_frame.setSpacing(10)
            horizontalLayout_frame.setObjectName("verticalLayout_3")
            self.horizontalLayout_frame2.addWidget(frame)
            frame1 = QtWidgets.QFrame()
            verticalLayout_frame1 = QtWidgets.QVBoxLayout(frame1)
            frame1.setStyleSheet("background-color: green")
            verticalLayout_frame1.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame1.setSpacing(0)
            verticalLayout_frame1.setObjectName("verticalLayout_frame1")
            frame.layout().addWidget(frame1, 3)

            label_img = QtWidgets.QLabel(frame)
            label_img.setMinimumSize(QtCore.QSize(100, 100))
            label_img.setText("")
            label_img.setScaledContents(True)
            label_img.setObjectName(f"image_label_1_2")
            frame1.layout().addWidget(label_img, 3)

            frame2 = QtWidgets.QFrame()
            frame2.setStyleSheet("border: none;")
            verticalLayout_frame2 = QtWidgets.QVBoxLayout(frame2)
            verticalLayout_frame2.setContentsMargins(0, 0, 0, 0)
            verticalLayout_frame2.setSpacing(0)
            verticalLayout_frame2.setObjectName("verticalLayout_frame2")
            frame.layout().addWidget(frame2, 2)

            typ_label = QtWidgets.QLabel(frame)
            typ_label.setAlignment(QtCore.Qt.AlignCenter)
            typ_label.setStyleSheet("font-weight: bold;text-decoration: underline")
            typ_label.setObjectName(f"typ_label_1_3")
            verticalLayout_frame2.addWidget(typ_label, 2)

            price_label = QtWidgets.QLabel(frame)
            price_label.setAlignment(QtCore.Qt.AlignLeft)
            price_label.setObjectName(f"price_label_1_2")
            verticalLayout_frame2.addWidget(price_label, 1)

            verkauf_btn = QtWidgets.QPushButton()
            verkauf_btn.setMinimumSize(QtCore.QSize(90, 30))
            verkauf_btn.setText("Verkaufen")
            verkauf_btn.setStyleSheet("background-color: green")
            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap("images/trash-can.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            verkauf_btn.setIcon(icon1)
            verkauf_btn.setIconSize(QtCore.QSize(20, 20))
            verkauf_btn.clicked.connect(lambda _,ins=i: self.verkauf_gebraucht(ins) )
            verticalLayout_frame2.addWidget(verkauf_btn, 1)

            self.track_list.append({
                "price_label": price_label,
                "label_img": label_img,
                "typ_label": typ_label
            })
        track_index = 0
        for i in range(len(ndata)):
            index=i
            track_info = self.track_list[index]
            print(f"index:{index}")
            print(f"ndata:{ndata}")
            track_img1 = ndata[index]
            track_img = track_img1["image"]
            pixmap = QtGui.QPixmap(track_img)
            pixmap = pixmap.scaledToWidth(300)

            ind = track_img1["index"]
            prix_string = track_img1["price"]
            prix_nombre = float(prix_string.replace('\u20ac', '').replace(',', '.').replace('Preis :', ' '))

            ind = (ind/ 2)*16
            print("affiche trakt vorhande")
            prix_nombre = prix_nombre*(1- ind/100)
            track_info["label_img"].setPixmap(pixmap)
            track_info["price_label"].setText(f"VerkaufPreis : {prix_nombre}  -{ind}% Rabatt")
            track_info["typ_label"].setText(track_img1["typ"])

    def verkauf_gebraucht(self,index):
        ndata = user_track[self.nom]
        try:
            with open('verkauf.json', 'r') as json_file:
                content = json_file.read()

                if not content.strip():
                    verkauf_list = []
                else:
                    verkauf_list = json.loads(content)
        except FileNotFoundError:
            verkauf_list = []
        for i in range(self.frame1.layout().count()):
            widget = self.frame1.layout().itemAt(i).widget()
            if widget is not None:
                widget.deleteLater()

        info = ndata[index]
        preis = info["price"]
        preis = float(preis.replace('\u20ac', '').replace(',', '.'))
        verkauf_list=[info["image"],info["typ"]]


        frame = QtWidgets.QFrame()
        frame.setObjectName(f"frame_1_2")
        frame.setStyleSheet("background-color: none; border: 1px solid grey")
        horizontalLayout_frame = QtWidgets.QVBoxLayout()
        frame.setLayout(horizontalLayout_frame)
        horizontalLayout_frame.setContentsMargins(2, 2, 2, 2)
        horizontalLayout_frame.setSpacing(10)
        horizontalLayout_frame.setObjectName("verticalLayout_3")
        self.horizontalLayout_frame1.addWidget(frame)
        frame1 = QtWidgets.QFrame()
        verticalLayout_frame1 = QtWidgets.QVBoxLayout(frame1)
        frame1.setStyleSheet("background-color: green")
        verticalLayout_frame1.setContentsMargins(0, 0, 0, 0)
        verticalLayout_frame1.setSpacing(0)
        verticalLayout_frame1.setObjectName("verticalLayout_frame1")
        frame.layout().addWidget(frame1, 3)

        label_img = QtWidgets.QLabel(frame)
        label_img.setMinimumSize(QtCore.QSize(100, 100))
        label_img.setText("")
        label_img.setScaledContents(True)
        label_img.setObjectName(f"image_label_1_2")
        pixmap = QtGui.QPixmap(verkauf_list[0])
        pixmap = pixmap.scaledToWidth(300)
        label_img.setPixmap(pixmap)
        frame1.layout().addWidget(label_img, 3)


        frame12 = QtWidgets.QFrame()
        frame12.setObjectName(f"frame_1_2")

        horizontalLayout_frame12 = QtWidgets.QVBoxLayout()
        frame12.setLayout(horizontalLayout_frame12)
        horizontalLayout_frame12.setContentsMargins(2, 2, 2, 2)
        horizontalLayout_frame12.setSpacing(10)
        horizontalLayout_frame12.setObjectName("verticalLayout_3")
        self.horizontalLayout_frame1.addWidget(frame12)
        ty_label = QtWidgets.QLabel(frame)
        ty_label.setAlignment(QtCore.Qt.AlignCenter)
        ty_label.setStyleSheet("font-weight: bold;text-decoration: underline")
        ty_label.setObjectName(f"typ_label_1_3")
        ty_label.setText("Interessierte Nutzer")
        horizontalLayout_frame12.addWidget(ty_label)
        labels = []
        for i in range(7):
            label = QtWidgets.QLabel(frame)
            label.setAlignment(QtCore.Qt.AlignCenter)
            label.setObjectName(f"label_{i}")
            horizontalLayout_frame12.addWidget(label)
            labels.append(label)

        label = QtWidgets.QLabel(frame)
        label.setAlignment(QtCore.Qt.AlignCenter)
        label.setStyleSheet("font-weight: bold;text-decoration: underline")
        label.setObjectName(f"typ_label_1_3")
        horizontalLayout_frame12.addWidget(label)
    ############################Prreis vorstellung################
        mm = ["Alejandro", "Francois", "Birgit", "Lukas", "Sandra", "Chris", "Francesco", "Mette"]
        t = 0
        preis_list = []
        for i in range(8):
            zufallzahl1 = random.uniform(0.0, 1.0)
            if zufallzahl1 >= 0.6:
                zufallzahl2 = random.uniform(-30.1, 10.0)

                vpreis = preis * (1 + zufallzahl2 / 100)
                vpreis_formate = "{:.2f}".format(vpreis)
                float_value = float(vpreis_formate)
                preis_list.append(float_value)
                labels[t].setText(f"Name: {mm[i]}.   Preis Vorgechlagen : {vpreis_formate}€")
                t = t + 1
        print(preis_list)
        g_preis = max(preis_list)
        g_preis = float(g_preis)
        nutzerind=preis_list.index(g_preis)
        nutzer=mm[nutzerind]
        nut=klausnetz[nutzer]
        bud= nut["budget"]
        bud = bud - g_preis
        nut["budget"] = bud
        klausnetz[nutzer] = nut


        prozentklaus = g_preis * (1 / 100)
        prozentklaus = "{:.2f}".format(prozentklaus)
        label.setText(f"Der Preis genommen ist : {g_preis} et Klaus: {prozentklaus}")

        del ndata[index]
        user_track[self.nom]=ndata
        with open('klausnetz.json', 'w') as json_file:
            json.dump(klausnetz, json_file, indent=2)
        with open('user_track.json', 'w') as json_file:
            json.dump(user_track, json_file, indent=2)
        ############################Aktualisierung von Budget######################
        ########Klaus provision
        prozentklaus = float(prozentklaus)
        klaus= user_data["klaus"]
        bud=klaus["budget"]
        bud = bud + prozentklaus
        klaus["budget"] = bud
        user_data["klaus"] = klaus
        with open('user_data.json', 'w') as json_file:
            json.dump(user_data, json_file, indent=2)

        #########verkäufer#######
        g_preis = g_preis - prozentklaus
        user = user_data[self.nom]
        bud1 = user["budget"]
        bud1 = bud1 + g_preis
        bud1 = "{:.2f}".format(bud1)
        bud1= float(bud1)
        user["budget"] = bud1

        self.label_3.setText(f"{bud1}")
        user_data[self.nom] = user
        with open('user_data.json', 'w') as json_file:
            json.dump(user_data, json_file, indent=2)

    def netz_akt(self):
        for i in range(self.widget_71.layout().count()):
            widget = self.widget_71.layout().itemAt(i).widget()
            if widget is not None:
                widget.deleteLater()

        last_eight = dict(deque(klausnetz.items(), maxlen=8))
        for person, data in last_eight.items():
            label = QtWidgets.QLabel()
            label.setAlignment(QtCore.Qt.AlignHCenter)
            label.setStyleSheet("font-size: 20px; font-weight: bold")
            label.setObjectName("label")
            name = data["name"]
            budget = data["budget"]
            label.setText(f"Name:   {name},             Budget: {budget} €")
            self.verticalLayout_141.addWidget(label)

        for i in range(5):
            label = QtWidgets.QLabel()
            label.setAlignment(QtCore.Qt.AlignHCenter)
            label.setObjectName("label")
            self.verticalLayout_141.addWidget(label)

    ############################ Filter Funktion ###################################

    def filter_tractors(self):
        try:
            price = int(self.price_textEdit.toPlainText()) if self.price_textEdit.toPlainText() else None
            ps = int(self.ps_textEdit.toPlainText()) if self.ps_textEdit.toPlainText() else None
            kmh = int(self.km_textEdit.toPlainText()) if self.km_textEdit.toPlainText() else None
            baujahr = int(self.baujahr_textEdit.toPlainText()) if self.baujahr_textEdit.toPlainText() else None

            self.filtered_tractors = self.filter_tractors_by_criteria(price, ps, kmh, baujahr)
            self.show_images_filter(self.filtered_tractors)

            if not self.filtered_tractors:
                self.info_message_label.setText("Aucun tracteur trouvé.")
            # else:
            #      self.info_message_label.clear()

        except ValueError as e:
            print(f"Erreur de conversion : {e}")
        except Exception as e:
            print(f"Une erreur s'est produite : {e}")

    def filter_tractors_by_criteria(self, price=None, ps=None, kmh=None, baujahr=None):
        filtered_tractors = []
        try:
            for tractor_info in self.car_info_list:
                tractor_price_str = tractor_info['price_label'].text().replace('€', '')
                tractor_ps_str = self.get_int_from_label(tractor_info['ps_label'])
                tractor_kmh_str = self.get_int_from_label(tractor_info['km_label'])
                tractor_baujahr_str = self.get_int_from_label(tractor_info['baujahr_label'])

                # Convertir les valeurs en entiers
                tractor_price = int(tractor_price_str) if tractor_price_str else None
                tractor_ps = int(tractor_ps_str) if tractor_ps_str is not None else None
                tractor_kmh = int(tractor_kmh_str) if tractor_kmh_str is not None else None
                tractor_baujahr = int(tractor_baujahr_str) if tractor_baujahr_str is not None else None

                if (
                        (price is None or tractor_price is not None and tractor_price <= price) and
                        (ps is None or tractor_ps is not None and tractor_ps <= ps) and
                        (kmh is None or tractor_kmh is not None and tractor_kmh <= kmh) and
                        (baujahr is None or tractor_baujahr is not None and tractor_baujahr <= baujahr)
                ):
                    filtered_tractors.append({
                        "image_label": tractor_info["image_label"],
                        "typ": tractor_info['typ_label'].text(),
                        "price": tractor_info['price_label'].text(),
                        "hersteller": tractor_info['hersteller_label'].text(),
                        "ps": tractor_info['ps_label'].text(),
                        "km": tractor_info['km_label'].text(),
                        "baujahr": tractor_info['baujahr_label'].text(),
                    })
        except ValueError as e:
            print(f"Erreur de conversion : {e}")

        return filtered_tractors

    def get_int_from_label(self, label):
        text = label.text().split(":")[-1].strip()
        try:
            return int(text) if text.isdigit() else 0
        except ValueError as e:
            print(f"Conversion error: {e}")
            return 0

    def show_budget_warning(self):
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Warning)
        msg.setText("Ihre Budget ist nicht genug")
        msg.setWindowTitle("Warning")
        msg.exec_()
    def show_menge_warning(self):
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Warning)
        msg.setText("Es gibt leider kein mehr ins Lager")
        msg.setWindowTitle("Warning")
        msg.exec_()

    def show_images_filter(self, filtered_tractors):
        # Effacez la page avant de charger les tracteurs filtrés
        self.clear_page()

        if not filtered_tractors:
            print("Aucun tracteur trouvé.")
            return

        # Ajoutez un widget conteneur pour organiser les labels des tracteurs filtrés
        container_frame = QtWidgets.QFrame()
        container_frame.setStyleSheet("layout { border-radius: 10px; border: 2px solid gray; }")
        container_layout = QVBoxLayout()
        container_frame.setLayout(container_layout)

        for index, tractor_info in enumerate(filtered_tractors):
            image_path = image_filenames[index]
            info_text = f"{tractor_info['typ']}, {tractor_info['price']}, {tractor_info['hersteller']}, {tractor_info['ps']}, {tractor_info['km']}, {tractor_info['baujahr']}"
            pixmap = QPixmap(image_path)
            image_label = QLabel()
            image_label.setPixmap(pixmap)

            typ_label = QLabel(f"Type: {tractor_info['typ']}")
            price_label = QLabel(f"Prix: {tractor_info['price']}")
            hersteller_label = QLabel(f"Hersteller: {tractor_info['hersteller']}")
            ps_label = QLabel(f"PS: {tractor_info['ps']}")
            km_label = QLabel(f"Km/h: {tractor_info['km']}")
            baujahr_label = QLabel(f"Baujahr: {tractor_info['baujahr']}")

            pushButton_12 = QtWidgets.QPushButton(container_frame)
            pushButton_12.setMinimumSize(QtCore.QSize(90, 30))
            pushButton_12.setText("add zu Warenkorb")
            pushButton_12.setStyleSheet("background-color: green")
            icon1 = QtGui.QIcon()
            icon1.addPixmap(QtGui.QPixmap("images/shopping-cart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            pushButton_12.setIcon(icon1)
            pushButton_12.setIconSize(QtCore.QSize(20, 20))
            #container_frame.addWidget(pushButton_12)

            pushButton_12.clicked.connect(lambda _, inv=index: self.go_to_warenkorb(inv))

            # Ajoutez les widgets au layout du conteneur
            tractor_layout = QHBoxLayout()
            tractor_layout.addWidget(image_label)
            info_layout = QVBoxLayout()
            info_layout.addWidget(typ_label)
            info_layout.addWidget(price_label)
            info_layout.addWidget(hersteller_label)
            info_layout.addWidget(ps_label)
            info_layout.addWidget(km_label)
            info_layout.addWidget(baujahr_label)
            info_layout.addWidget(pushButton_12)
            tractor_layout.addLayout(info_layout)

            container_layout.addLayout(tractor_layout)
        self.verticalLayout_12.addWidget(container_frame)
    def log_out(self):
        ################halbes Jahr um############
        self.data["index"] = self.data["index"] + 1
        user_data[self.nom] = self.data
        with open('user_data.json', 'w') as json_file:
            json.dump(user_data, json_file,indent=2)

        dt = user_track[self.nom]
        for i in range(len(dt)):
            trak= dt[i]
            index = trak["index"]
            index = index + 1
            trak["index"]= index
            dt[i]= trak
        user_track[self.nom] = dt
        with open('user_track.json', 'w') as json_file:
            json.dump(user_track, json_file, indent=2)
        self.widget.parent().close()
    def clear_page(self):
        while self.row_layout_1.count():
            child = self.row_layout_1.takeAt(0)
            if child.widget():
                child.widget().deleteLater()
        while self.row_layout_2.count():
            child = self.row_layout_2.takeAt(0)
            if child.widget():
                child.widget().deleteLater()

    def retranslateUi(self, Widget):
        _translate = QtCore.QCoreApplication.translate
        Widget.setWindowTitle(_translate("Widget", "Widget"))
        self.label_2.setText(_translate("Widget", self.data["name"]))
        self.label_3.setText(_translate("Widget", str(self.data["budget"])))
        self.label_6.setText(_translate("Widget", "€"))
        self.pushButton_2.setText(_translate("Widget", "Traktoren"))
        self.pushButton.setText(_translate("Widget", "Zubehörde"))
        self.pushButton_1.setText(_translate("Widget", "Klaus Netz"))
        self.pushButton_9.setText(_translate("Widget", "Traktor Vorhanden"))
        self.pushButton_3.setText(_translate("Widget", "Warenkorb"))
        self.pushButton_4.setText(_translate("Widget", "Prev"))
        self.label_4.setText(_translate("Widget", "Zubehörde"))
        self.pushButton_5.setText(_translate("Widget", "Next"))
        self.pushButton_7.setText(_translate("Widget", "Prev"))
        self.label_8.setText(_translate("Widget", "Traktoren"))
        self.pushButton_8.setText(_translate("Widget", "Next"))
        self.label_7.setText(_translate("Widget", "Warenkorb"))
        self.label_71.setText(_translate("Widget", "Klausnetz"))
        self.label_72.setText(_translate("Widget", "Traktoren vorhanden"))
        self.pushButton_6.setText(_translate("Widget", "Bezahlen"))


if __name__ == "__main__":
    app = QtWidgets.QApplication([])
    window = MyApplication()
    window.show()
    app.exec_()